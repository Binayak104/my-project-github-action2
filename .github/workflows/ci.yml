name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-java: # Changed job name to build-java as per your original code
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Adding caching for Gradle dependencies to speed up builds
    - name: Cache Gradle packages
      uses: actions/cache@v4 # Updated to v4 to avoid deprecation warnings
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run Unit and Integration Tests # Added a test step, as it's crucial for CI
      run: ./gradlew test

    # --- Code to check JAR existence ---
    - name: Check if JAR was created and list contents
      # This step explicitly lists the contents of the 'build/libs' directory.
      # It's vital to ensure the JAR file is present where the Dockerfile expects it
      # and to confirm its exact filename.
      run: |
        echo "Listing contents of build/libs/:"
        ls -la build/libs/
        # Optional: You can uncomment the following line to make the workflow fail
        # if no JAR is found, which can help in early debugging of build issues.
        # find build/libs -name "*.jar" -print -quit | grep -q . || { echo "ERROR: No JAR found in build/libs/! Aborting workflow."; exit 1; }
    # --- End of JAR existence check code ---

    - name: Upload JAR as artifact # Added artifact upload for built JAR
      uses: actions/upload-artifact@v4 # Updated to v4 to avoid deprecation warnings
      with:
        name: demo-app-jar
        # IMPORTANT CHANGE: Updated path to match the actual JAR name produced by Gradle.
        path: build/libs/java-app-1.0-SNAPSHOT.jar

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: binayaksre/demo-app
        # Using the commit SHA as a tag for better traceability
        tags: ${{ github.sha }}
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
